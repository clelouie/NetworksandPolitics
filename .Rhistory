packages()
packages()
Samples_Vanderbilt_20171026 <- read.csv("~/Documents/well_data/Samples_Vanderbilt_20171026.txt", row.names=NULL, na.strings=".")
View(Samples_Vanderbilt_20171026)
data <- read.csv("Samples_Vanderbilt_20171026.txt", quote="")
data <- read.csv("~/documents/well_data/Samples_Vanderbilt_20171026.txt", quote="")
data <- read.csv("~/documents/well_data/Samples_Vanderbilt_20171026.txt",
quote="", row.names = NULL)
data <- read.csv("~/documents/well_data/Samples_Vanderbilt_20171026.txt",
quote="", row.names = NULL, column.names=NULL)
install.packages(readr)
library(readr)
install.packages(readr)
install.packages('readr')
library(readr)
reader::read_csv('~/documents/well_data/Samples_Vanderbilt_20171026.txt')
readr::read_csv('~/documents/well_data/Samples_Vanderbilt_20171026.txt')
dat <- readr::read_csv('~/documents/well_data/Samples_Vanderbilt_20171026.txt')
View(dat)
probems(dat)
problems(dat)
dat[904492, ]
dat[904491, ]
dat[904490, ]
View(dat)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
df <- read.csv('midtermAll.csv')
print('midterms')
filter(df, school=='ArtSci') %>%
filter(type=='exam') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('papers')
filter(df, school=='ArtSci') %>%
filter(type=='paper') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('projects')
filter(df, school=='ArtSci') %>%
filter(type=='project') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('all')
filter(df, school=='ArtSci') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('midterms')
filter(df, school=='Eng') %>%
filter(type=='exam') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('papers')
filter(df, school=='Eng') %>%
filter(type=='paper') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('projects')
filter(df, school=='Eng') %>%
filter(type=='project') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
print('all')
filter(df, school=='Eng') %>%
{ table(cut(.$midtermWeight,breaks=seq.int(from=0,to=100,by=10))) }
filter(df, midtermCount!=0) %>%
{ table(.$school, .$type) }
install.packages("reshape2")
library(reshape2)
clean <- reshape2::melt(data,
id.var = c('department','midtermWeight', 'midtermDrops',
'paperWeight', 'projectWeight','class','final','finalWeight',
'midtoFinal','school'),
variable.name = 'count')
View(clean)
library(tidyverse)
library(reshape2)
ArtSci <- read.csv("~/documents/hustler/midterm data - Data - A&S.csv")
library(tidyverse)
library(reshape2)
ArtSci <- read.csv("~/documents/hustler/data/midterm data - Data - A&S.csv")
Eng <- read.csv("~/documents/hustler/data/midterm data - Data - Engineering.csv")
names(ArtSci) <- c("department", "class", "midtermCount", "midtermDate", "midtermWeight",
"midtermDrops", "paperCount", "paperDate", "paperWeight", "projectCount",
"projectDate", "projectWeight", "final", "finalWeight", "midtoFinal",
"a", "b", "c")
names(Eng) <- c("department", "class", "midtermCount", "midtermDate", "midtermWeight",
"midtermDrops", "paperCount", "paperDate", "paperWeight", "projectCount",
"projectDate", "projectWeight", "final", "finalWeight", "midtoFinal")
for (row in 2:length(ArtSci$department)) { # 2 so you don't affect column names
if(ArtSci$department[row] == "") {    # if its empty...
ArtSci$department[row] = ArtSci$department[row-1] # ...replace with previous row's value
}
}
for (row in 2:length(Eng$department)) { # 2 so you don't affect column names
if(Eng$department[row] == "") {    # if its empty...
Eng$department[row] = Eng$department[row-1] # ...replace with previous row's value
}
}
ArtSci <- subset(ArtSci, select = -c(midtermDate,paperDate,projectDate, a, b, c))
Eng <- subset(Eng, select = -c(midtermDate,paperDate,projectDate))
ArtSci<-ArtSci[!(ArtSci$class==""),]
Eng<-Eng[!(Eng$class==""),]
ArtSci[ArtSci == '' | ArtSci == "N/A" | ArtSci == "?"] <- NA
Eng[Eng == '' | Eng == "N/A" | Eng == "?"] <- NA
ArtSci$midtermCount[is.na(ArtSci$midtermCount)] <- 0
ArtSci$paperCount[is.na(ArtSci$paperCount)] <- 0
ArtSci$projectCount[is.na(ArtSci$projectCount)] <- 0
ArtSci$final[is.na(ArtSci$final)] <- 0
Eng$midtermCount[is.na(Eng$midtermCount)] <- 0
Eng$paperCount[is.na(Eng$paperCount)] <- 0
Eng$projectCount[is.na(Eng$projectCount)] <- 0
Eng$final[is.na(Eng$final)] <- 0
ArtSci$midtermWeight <- gsub("%$","",ArtSci$midtermWeight)
ArtSci$projectWeight <- gsub("%$","",ArtSci$projectWeight)
cols.num <- c('midtermCount','midtermWeight','midtermDrops','paperCount',
'paperWeight','projectCount','projectWeight','final',
'finalWeight','midtoFinal')
ArtSci[cols.num] <- sapply(ArtSci[cols.num],as.numeric)
Eng[cols.num] <- sapply(Eng[cols.num],as.numeric)
ArtSci <- cbind(ArtSci, school='ArtSci')
Eng <- cbind(Eng, school='Eng')
combine <- rbind(ArtSci, Eng)
clean <- reshape2::melt(data,
id.var = c('department','midtermWeight', 'midtermDrops',
'paperWeight', 'projectWeight','class','final','finalWeight',
'midtoFinal','school'),
variable.name = 'count')
View(clean)
clean <- reshape2::melt(combine,
id.var = c('department','midtermWeight', 'midtermDrops',
'paperWeight', 'projectWeight','class','final','finalWeight',
'midtoFinal','school'),
variable.name = 'count')
View(clean)
View(combine)
combine <- subset(combine, select = -c('midtermDrops', 'final', 'finalWeight', 'midtoFinal'))
comb <- combine
rm(combine)
comb <- subset(comb,
select = -c('midtermDrops', 'final', 'finalWeight', 'midtoFinal'))
comb <- subset(comb,
select = -c(midtermDrops, final, finalWeight, midtoFinal))
View(comb)
clean <- reshape2::melt(combine,
id.var = c('department','midtermWeight',
'paperWeight', 'projectWeight','class','school'),
variable.name = 'count')
clean <- reshape2::melt(comb,
id.var = c('department','midtermWeight',
'paperWeight', 'projectWeight','class','school'),
variable.name = 'count')
View(clean)
subset(comb, select = -c(midtermWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'))
clean1 <-
subset(comb, select = -c(midtermWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'))
View(clean1)
names(ArtSci) <- c("department", "class", "examCount", "examDate", "examWeight",
"examDrops", "paperCount", "paperDate", "paperWeight", "projectCount",
"projectDate", "projectWeight", "final", "finalWeight", "midtoFinal",
"a", "b", "c")
library(tidyverse)
library(reshape2)
ArtSci <- read.csv("~/documents/hustler/data/midterm data - Data - A&S.csv")
Eng <- read.csv("~/documents/hustler/data/midterm data - Data - Engineering.csv")
names(ArtSci) <- c("department", "class", "examCount", "examDate", "examWeight",
"examDrops", "paperCount", "paperDate", "paperWeight", "projectCount",
"projectDate", "projectWeight", "final", "finalWeight", "midtoFinal",
"a", "b", "c")
names(Eng) <- c("department", "class", "examCount", "examDate", "examWeight",
"examDrops", "paperCount", "paperDate", "paperWeight", "projectCount",
"projectDate", "projectWeight", "final", "finalWeight", "midtoFinal")
for (row in 2:length(ArtSci$department)) { # 2 so you don't affect column names
if(ArtSci$department[row] == "") {    # if its empty...
ArtSci$department[row] = ArtSci$department[row-1] # ...replace with previous row's value
}
}
for (row in 2:length(Eng$department)) { # 2 so you don't affect column names
if(Eng$department[row] == "") {    # if its empty...
Eng$department[row] = Eng$department[row-1] # ...replace with previous row's value
}
}
ArtSci <- subset(ArtSci, select = -c(examDate,paperDate,projectDate, a, b, c))
Eng <- subset(Eng, select = -c(examDate,paperDate,projectDate))
ArtSci<-ArtSci[!(ArtSci$class==""),]
Eng<-Eng[!(Eng$class==""),]
ArtSci[ArtSci == '' | ArtSci == "N/A" | ArtSci == "?"] <- NA
Eng[Eng == '' | Eng == "N/A" | Eng == "?"] <- NA
ArtSci$examCount[is.na(ArtSci$examCount)] <- 0
ArtSci$paperCount[is.na(ArtSci$paperCount)] <- 0
ArtSci$projectCount[is.na(ArtSci$projectCount)] <- 0
ArtSci$final[is.na(ArtSci$final)] <- 0
Eng$examCount[is.na(Eng$examCount)] <- 0
Eng$paperCount[is.na(Eng$paperCount)] <- 0
Eng$projectCount[is.na(Eng$projectCount)] <- 0
Eng$final[is.na(Eng$final)] <- 0
ArtSci$examWeight <- gsub("%$","",ArtSci$examWeight)
ArtSci$projectWeight <- gsub("%$","",ArtSci$projectWeight)
cols.num <- c('examCount','examWeight','examDrops','paperCount',
'paperWeight','projectCount','projectWeight','final',
'finalWeight','midtoFinal')
ArtSci[cols.num] <- sapply(ArtSci[cols.num],as.numeric)
Eng[cols.num] <- sapply(Eng[cols.num],as.numeric)
ArtSci <- cbind(ArtSci, school='ArtSci')
Eng <- cbind(Eng, school='Eng')
comb <- rbind(ArtSci, Eng)
comb <- subset(comb,
select = -c(examDrops, final, finalWeight, midtoFinal))
clean1 <-
subset(comb, select = -c(examWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'))
View(clean1)
clean1 <- subset(comb, select = -c(examWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'), variable.name = 'type')
comb2 <- reshape2::melt(., id.var = c('department','class','school','examCount','paperCount','projectCount'))
comb2 <- reshape2::melt(comb, id.var = c('department','class','school','examCount','paperCount','projectCount'))
comb1 <- subset(comb, select = -c(examWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'), variable.name = 'type')
rm(clean)
rm(clean1)
View(comb2)
clean <- comb1$midtermWeight <- comb2$value
View(comb1)
clean <- comb1['midtermWeight'] <- comb2['value']
View(clean)
View(comb1)
comb <- rbind(ArtSci, Eng)
comb <- subset(comb, select = -c(examDrops, final, finalWeight, midtoFinal))
comb1 <- subset(comb, select = -c(examWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'), variable.name = 'type')
comb2 <- reshape2::melt(comb, id.var = c('department','class','school','examCount','paperCount','projectCount'))
comb1['weight'] <- comb2['value']
View(comb1)
comb <- rbind(ArtSci, Eng)
comb <- subset(comb, select = -c(examDrops, final, finalWeight, midtoFinal))
comb1 <- subset(comb, select = -c(examWeight, paperWeight, projectWeight)) %>%
reshape2::melt(., id.var = c('department','class','school'), variable.name = 'type')
comb2 <- reshape2::melt(comb, id.var = c('department','class','school','examCount','paperCount','projectCount'))
comb1['midtermWeight'] <- comb2['value']
clean <-
rename(comb1, value = midtermCount)
clean <-
rename(comb1, midtermCount = value)
View(clean)
write.csv(clean, file="ArtSciEngClean.csv")
setwd("~/Document/GitHub/NetworksandPolitics")
setwd("~/Documents/GitHub/NetworksandPolitics")
el <- matrix(c(1,2,
2,3,
2,4,
2,6,
4,5,
4,6,
6,7,
6,5,
5,8,
8,9,
8,10,
9,10,
9,11),
byrow = TRUE, ncol = 2)
View(el)
nw <- graph_from_edgelist(el, directed = FALSE)
#install.packages("igraph")
library(igraph)
class(nw)
nw <- graph_from_edgelist(el, directed = FALSE)
class(nw)
plot(nw)
library(igraph)
nw_updated <- add_vertices(nw, 1)
View(nw_updated)
plot(nw_updated)
nw_updated <- add_vertices(nw, 3)
plot(nw_updated)
nw_updated_again <- add_edges(nw_updated, edges = c(13, 14))
plot(nw_updated_again)
distances(nw_updated_again, mode = "all")
V(nw_updated_again)
vcount(nw_updated_again)
V(nw_updated_again)$name <- c("Lu", "Seth", "Mary", "Chae",
"Agnes", "Hike", "Anand", "Mick",
"Victor", "Karen", "Ayeh", "Jesus",
"Sidharth", "Bob")
V(nw_updated_again)
plot(nw_updated_again)
degree(nw_updated_again, v = "Hike")
nw_rnd1 <- erdos.renyi.game(50, .2)
vcount(nw_rnd1)
ecount(nw_rnd1)
plot(nw_rnd1)
## Here's one with a higher probability of link formation:
nw_rnd2 <- erdos.renyi.game(50, .4)
plot(nw_rnd2)
nw_rnd3 <- erdos.renyi.game(50, 275, type = "gnm")
plot(nw_rnd3)
